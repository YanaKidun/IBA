
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- Создание схемы в БД
-- Schema IBA_3
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `IBA_3` DEFAULT CHARACTER SET utf8 ;
USE `IBA_3` ;

-- -----------------------------------------------------
-- Создание таблицы  Статус
-- Table `IBA_3`.`status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `IBA_3`.`status` (
  `status_id` INT NOT NULL,
  `name` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`status_id`));


-- -----------------------------------------------------
-- Создание таблицы  Клиент
-- Table `IBA_3`.`client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `IBA_3`.`client` (
  `client_id` INT NOT NULL AUTO_INCREMENT,
  `last_ame` VARCHAR(50) NOT NULL,
  `first_name` VARCHAR(50) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `client_status_id` INT NOT NULL DEFAULT 1,
  `client_amout_order` DECIMAL(8,2) NOT NULL DEFAULT 0.00,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`client_id`, `client_status_id`),
    FOREIGN KEY (`client_status_id`)
    REFERENCES `IBA_3`.`status` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Создание уникального индекса для таблицы  Клиент по полю email
-- -----------------------------------------------------

CREATE UNIQUE INDEX `email_UNIQUE` ON `IBA_3`.`client` (`email` ASC) VISIBLE;


-- -----------------------------------------------------
-- Создание таблицы  Группы продуктов
-- Table `IBA_3`.`product_group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `IBA_3`.`product_group` (
  `product_group_id` INT NOT NULL,
  `group_name` VARCHAR(255) NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`product_group_id`));

-- -----------------------------------------------------
-- Создание таблицы  Продукт
-- Table `IBA_3`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `IBA_3`.`product` (
  `product_id` INT NOT NULL AUTO_INCREMENT,
  `product_group_id` INT NOT NULL,
  `product_name` VARCHAR(50) NOT NULL,
  `start_price` DECIMAL(5,2) NOT NULL,
  `discount` DECIMAL(5,2) NULL DEFAULT 0.00,
  `price_with_discount` DECIMAL(8,2) GENERATED ALWAYS AS (start_price - (start_price/100 * discount )) stored,
  `product_char_code` VARCHAR(8) NOT NULL,
  `count_of_products_warehouse` DECIMAL(8,3) NOT NULL,
  `create_time` TIMESTAMP(6) NOT NULL,
  `update_time` TIMESTAMP(6) NOT NULL,
  PRIMARY KEY (`product_id`),
  CONSTRAINT `fk_product_group1` -- ограничение, которое при вставке будет проверять, а есть ли указанная группа товаров.
    FOREIGN KEY (`product_group_id`)
    REFERENCES `IBA_3`.`product_group` (`product_group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_product_group1_idx` ON `IBA_3`.`product` (`product_group_id` ASC) VISIBLE;

-- -----------------------------------------------------
-- Создание таблицы  Заказ клиента 
-- Table `IBA_3`.`client_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `IBA_3`.`client_order` (
  `client_cart_id` INT NOT NULL AUTO_INCREMENT,
  `client_id` INT NOT NULL,
  `client_cart_status_id` INT NOT NULL DEFAULT 3,
  `client_cart_sum` DECIMAL(8,2) NOT NULL DEFAULT 0.00,
  `update_time` TIMESTAMP NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`client_cart_id`),
  CONSTRAINT `fk_client_order`
    FOREIGN KEY (`client_id`)
    REFERENCES `IBA_3`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_client_order_status`
    FOREIGN KEY (`client_cart_status_id`)
    REFERENCES `IBA_3`.`status` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_client_order_idx` ON `IBA_3`.`client_order` (`client_id` ASC) VISIBLE;
CREATE INDEX `fk_client_order_status_idx` ON `IBA_3`.`client_order` (`client_cart_status_id` ASC) VISIBLE;

-- -----------------------------------------------------
-- Создание линковочной таблицы Заказ-клиента - Продукт
-- Table `IBA_3`.`client_order_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `IBA_3`.`client_order_detail` (
  `row_id` INT NOT NULL AUTO_INCREMENT,
  `client_cart_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `product_price_with_discount` DECIMAL(8,2) NOT NULL,
  `product_count` DECIMAL(8,3) NOT NULL,
  `amount_product_sum` DECIMAL(8,2) GENERATED ALWAYS AS (`product_price_with_discount` * `product_count` ) STORED,
  `update_time` TIMESTAMP NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`row_id`),
   CONSTRAINT `fk_client_cart_id`
		FOREIGN KEY (`client_cart_id`)
		REFERENCES `IBA_3`.`client_order` (`client_cart_id`)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION,
	CONSTRAINT `fk_cart_id_product_id`
		FOREIGN KEY (`product_id`)
		REFERENCES `IBA_3`.`product` (`product_id`)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Создание представления для товаров, остаток на складе которых больше 3 ед
-- View `IBA_3`.`view_products_in_stock`
-- -----------------------------------------------------
CREATE  OR REPLACE VIEW `view_products_in_stock` AS
    SELECT 
        p.`product_id`,
        p.`product_name`,
        p.`price_with_discount`,
        p.`count_of_products_warehouse`
    FROM
        `product` AS p
    WHERE
        p.`count_of_products_warehouse` > 3;



-- отключение хаотичной вставки данных в таблицы 
-- ранее UNIQUE_CHECKS=0 временно отключает проверку уникальности
-- ранее FOREIGN_KEY_CHECKS=0 временно отключает проверку внешних ключей
-- -----------------------------------------------------

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

